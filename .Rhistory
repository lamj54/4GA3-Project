st_drivers()
#visualizing shpfile
ggplot() +
geom_sf(data = nshp, size = 0.5, color = "black", fill = "#330066") +
ggtitle("Toronto Neighbourhoods") +
coord_sf()
# Set working directory to the project folder on github
wd <- getwd()
#import shp file of neighbourhoods
nshp <- st_read(paste(wd, "/data/Neighbourhoods.shp", sep = ""))
st_drivers()
#visualizing shpfile
ggplot() +
geom_sf(data = nshp, size = 0.5, color = "white", fill = "#330066") +
ggtitle("Toronto Neighbourhoods") +
coord_sf()
# Set working directory to the project folder on github
wd <- getwd()
#import shp file of neighbourhoods
nshp <- st_read(paste(wd, "/data/Neighbourhoods.shp", sep = ""))
st_drivers()
#visualizing shpfile
ggplot() +
geom_sf(data = nshp, size = 0.5, color = "black", fill = "#CCCC99") +
ggtitle("Toronto Neighbourhoods") +
coord_sf()
# Set working directory to the project folder on github
wd <- getwd()
#import shp file of neighbourhoods
nshp <- st_read(paste(wd, "/data/Neighbourhoods.shp", sep = ""))
st_drivers()
#visualizing shpfile
ggplot() +
geom_sf(data = nshp, size = 0.5, color = "black", fill = "#CCFFFF") +
ggtitle("Toronto Neighbourhoods") +
coord_sf()
# Set working directory to the project folder on github
wd <- getwd()
#import shp file of neighbourhoods
nshp <- st_read(paste(wd, "/data/Neighbourhoods.shp", sep = ""))
st_drivers()
#visualizing shpfile
ggplot() +
geom_sf(data = nshp, size = 0.5, color = "black", fill = "#CCCC99") +
ggtitle("Toronto Neighbourhoods") +
coord_sf()
# Set working directory to the project folder on github
wd <- getwd()
#import shp file of neighbourhoods
nshp <- st_read(paste(wd, "/data/Neighbourhoods.shp", sep = ""))
st_drivers()
#visualizing shpfile
ggplot() +
geom_sf(data = nshp, size = 0.5, color = "black", fill = "#CCFFFF") +
ggtitle("Toronto Neighbourhoods") +
coord_sf()
# Set working directory to the project folder on github
wd <- getwd()
#import shp file of neighbourhoods
nshp <- st_read(paste(wd, "/data/Neighbourhoods.shp", sep = ""))
st_drivers()
#visualizing shpfile
ggplot() +
geom_sf(data = nshp, size = 0.5, color = "black", fill = "#CCCC99") +
ggtitle("Toronto Neighbourhoods") +
coord_sf()
# Set working directory to the project folder on github
wd <- getwd()
#import shp file of neighbourhoods
nshp <- st_read(paste(wd, "/data/Neighbourhoods.shp", sep = ""))
st_drivers()
#visualizing shpfile
ggplot() +
geom_sf(data = nshp, size = 0.5, color = "black", fill = "#996633") +
ggtitle("Toronto Neighbourhoods") +
coord_sf()
# Set working directory to the project folder on github
wd <- getwd()
#import shp file of neighbourhoods
nshp <- st_read(paste(wd, "/data/Neighbourhoods.shp", sep = ""))
st_drivers()
#visualizing shpfile
ggplot() +
geom_sf(data = nshp, size = 0.5, color = "white", fill = "#996633") +
ggtitle("Toronto Neighbourhoods") +
coord_sf()
# Set working directory to the project folder on github
wd <- getwd()
#import shp file of neighbourhoods
nshp <- st_read(paste(wd, "/data/Neighbourhoods.shp", sep = ""))
st_drivers()
#visualizing shpfile
ggplot() +
geom_sf(data = nshp, size = 0.5, color = "black", fill = "#CCCC99") +
ggtitle("Toronto Neighbourhoods") +
coord_sf()
# Set working directory to the project folder on github
wd <- getwd()
#import shp file of neighbourhoods
nshp <- st_read(paste(wd, "/data/Neighbourhoods.shp", sep = ""))
st_drivers()
#visualizing shpfile
ggplot() +
geom_sf(data = nshp, size = 0.5, color = "black", fill = "#FFFFCC") +
ggtitle("Toronto Neighbourhoods") +
coord_sf()
# Set working directory to the project folder on github
wd <- getwd()
#import shp file of neighbourhoods
nshp <- st_read(paste(wd, "/data/Neighbourhoods.shp", sep = ""))
st_drivers()
#visualizing shpfile
ggplot() +
geom_sf(data = nshp, size = 1, color = "black", fill = "#FFFFCC") +
ggtitle("Toronto Neighbourhoods") +
coord_sf()
# Set working directory to the project folder on github
wd <- getwd()
#import shp file of neighbourhoods
nshp <- st_read(paste(wd, "/data/Neighbourhoods.shp", sep = ""))
st_drivers()
#visualizing shpfile
ggplot() +
geom_sf(data = nshp, size = 0.5, color = "black", fill = "#FFFFCC") +
ggtitle("Toronto Neighbourhoods") +
coord_sf()
# Set working directory to the project folder on github
wd <- getwd()
#import shp file of neighbourhoods
nshp <- st_read(paste(wd, "/data/Neighbourhoods.shp", sep = ""))
st_drivers()
#visualizing shpfile
ggplot() +
geom_sf(data = nshp, size = 0.5, color = "black", fill = "#CCCC99") +
ggtitle("Toronto Neighbourhoods") +
coord_sf()
# Set working directory to the project folder on github
wd <- getwd()
#import shp file of neighbourhoods
nshp <- st_read(paste(wd, "/data/Neighbourhoods.shp", sep = ""))
st_drivers()
#visualizing shpfile
ggplot() +
geom_sf(data = nshp, size = 0.5, color = "black", fill = "#FFFFCC") +
ggtitle("Toronto Neighbourhoods") +
coord_sf()
View(Final_Table)
View(Final_Table)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
#Libraries needed (maybe?)
library(isdas)
library(spatstat)
library(tidyverse)
library(ggplot2)
library(rgdal)
library(sf)
library(dplyr)
# Set working directory to the project folder on github
wd <- getwd()
#import shp file of neighbourhoods
nshp <- st_read(paste(wd, "/data/Neighbourhoods.shp", sep = ""))
st_drivers()
#visualizing shpfile
ggplot() +
geom_sf(data = nshp, size = 0.5, color = "black", fill = "#FFFFCC") +
ggtitle("Toronto Neighbourhoods") +
coord_sf()
#Deleting the neighbourhood ID from the neighbourhood field for pairing to final table
#Extracting column as matrix
f2 <- as.matrix(nshp[2])
#deleting geometry field
f2 <- subset(f2, select = -c(geometry) )
#deleting neighbourhood IDs
f2 <- gsub("[1234567890()]", " ", f2)
#deleting space after
f2 <- str_squish(f2)
#rejoining to shp file
nshp[2] <- f2
#Covid Cases
covidcases <- read_csv(paste(wd,"/data/COVID19 cases.csv", sep=""))
#Neighborhood Data
neighbourhood <- read_csv(paste(wd,"/data/Neighbourhood_POP.csv", sep=""))
chr <- as.character.Date(covidcases$`Episode Date`)
covidcases$'nd' <-chr
fweek <- c("2021-12-01","2021-12-02","2021-12-03","2021-12-04","2021-12-05","2021-12-06","2021-12-07")
lweek <- c("2021-12-25","2021-12-26","2021-12-27","2021-12-28","2021-12-29","2021-12-30","2021-12-31")
fweektb <- subset(covidcases,nd %in% fweek)
lweektb <- subset(covidcases,nd %in% lweek)
ftab <- as.data.frame(table(fweektb$`Neighbourhood Name`))
ltab <- as.data.frame(table(lweektb$`Neighbourhood Name`))
covidcases$`Episode Date`[1]
#This section in creating final_table
#Neighbourhood_Name, F_weekcases, L_weekcases, POP, F_weekrate,, L_weekrate, Rate_over_month, Case_over_month
#We need to add population for each neighbourhood and join it to the final table
Neighbourhood <- ftab$Var1
F_weekcases <- ftab$Freq
L_weekcases <- ltab$Freq
Case_over_month <- ltab$Freq - ftab$Freq
#Create Final table
Final_Table <- data.frame(Neighbourhood, F_weekcases, L_weekcases)
#3 Neighbourhood are different so there must be an manual correction prior to merging
neighbourhood$Neighbourhood[128] <- "Weston-Pellam Park"
neighbourhood$Neighbourhood[16] <- "Briar Hill - Belgravia"
neighbourhood$Neighbourhood[30] <- "Danforth-East York"
#Merge neighbour with final table
Final_Table <- merge(Final_Table, neighbourhood)
# Creating the case rates per 10,000
Final_Table$F_weekrate <- Final_Table$F_weekcases/Final_Table$POP * 10000
Final_Table$L_weekrate <- Final_Table$L_weekcases/Final_Table$POP * 10000
# Creating rate change
Final_Table$Rate_Change <- Final_Table$L_weekrate - Final_Table$F_weekrate
# Creating fold increase
## for relative change: Final_Table$fold_increase <- (Final_Table$L_weekrate - Final_Table$F_weekrate) /Final_Table$F_weekrate
Final_Table$fold_increase <- Final_Table$L_weekrate/Final_Table$F_weekrate
#Neighbourhood Income Data
Socioeconomic_variables <- read_csv(paste(wd,"/data/Neighbourhoods_socioeconomic_variables.csv", sep=""))
#3 Neighbourhood are different so there must be an manual correction prior to merging
Socioeconomic_variables$Neighbourhood[128] <- "Weston-Pellam Park"
Socioeconomic_variables$Neighbourhood[16] <- "Briar Hill - Belgravia"
Socioeconomic_variables$Neighbourhood[30] <- "Danforth-East York"
#Merge neighbourhood socioeconomic variables data with final table
Final_Table <- merge(Final_Table, Socioeconomic_variables)
#Merging shpfile to final table
nshp <- nshp %>%
rename(Neighbourhood = FIELD_2)
Final_Table <- left_join(nshp, Final_Table, by = "Neighbourhood")
Final_Table <- Final_Table %>%
rename(`_id` = FIELD_1,
AREA_ATTR_ID = FIELD_3,
PARENT_AREA_ID = FIELD_4,
AREA_SHORT_CODE = FIELD_5,
AREA_LONG_CODE = FIELD_6,
AREA_NAME = FIELD_7,
AREA_DESC = FIELD_8,
X = FIELD_9,
Y = FIELD_10,
LONGITUDE = FIELD_11,
LATITUDE = FIELD_12,
OBJECTID = FIELD_13,
Shape__Area = FIELD_14,
Shape__Length = FIELD_15)
ggplot(data = neighbourhoods) +
geom_sf(aes(fill = total_population)) +
scale_fill_distiller(name = "Total Population",
palette = "YlOrRd",
direction = 1) +
theme_minimal()
ggplot(data = neighbourhoods) +
geom_sf(aes(fill = total_population)) +
scale_fill_distiller(name = "Total Population",
palette = "YlOrRd",
direction = 1) +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
#Libraries needed (maybe?)
library(isdas)
library(spatstat)
library(tidyverse)
library(ggplot2)
library(rgdal)
library(sf)
library(dplyr)
# Set working directory to the project folder on github
wd <- getwd()
#import shp file of neighbourhoods
nshp <- st_read(paste(wd, "/data/Neighbourhoods.shp", sep = ""))
st_drivers()
#visualizing shpfile
ggplot() +
geom_sf(data = nshp, size = 0.5, color = "black", fill = "#FFFFCC") +
ggtitle("Toronto Neighbourhoods") +
coord_sf()
#Deleting the neighbourhood ID from the neighbourhood field for pairing to final table
#Extracting column as matrix
f2 <- as.matrix(nshp[2])
#deleting geometry field
f2 <- subset(f2, select = -c(geometry) )
#deleting neighbourhood IDs
f2 <- gsub("[1234567890()]", " ", f2)
#deleting space after
f2 <- str_squish(f2)
#rejoining to shp file
nshp[2] <- f2
#Covid Cases
covidcases <- read_csv(paste(wd,"/data/COVID19 cases.csv", sep=""))
#Neighborhood Data
neighbourhood <- read_csv(paste(wd,"/data/Neighbourhood_POP.csv", sep=""))
chr <- as.character.Date(covidcases$`Episode Date`)
covidcases$'nd' <-chr
fweek <- c("2021-12-01","2021-12-02","2021-12-03","2021-12-04","2021-12-05","2021-12-06","2021-12-07")
lweek <- c("2021-12-25","2021-12-26","2021-12-27","2021-12-28","2021-12-29","2021-12-30","2021-12-31")
fweektb <- subset(covidcases,nd %in% fweek)
lweektb <- subset(covidcases,nd %in% lweek)
ftab <- as.data.frame(table(fweektb$`Neighbourhood Name`))
ltab <- as.data.frame(table(lweektb$`Neighbourhood Name`))
covidcases$`Episode Date`[1]
#This section in creating final_table
#Neighbourhood_Name, F_weekcases, L_weekcases, POP, F_weekrate,, L_weekrate, Rate_over_month, Case_over_month
#We need to add population for each neighbourhood and join it to the final table
Neighbourhood <- ftab$Var1
F_weekcases <- ftab$Freq
L_weekcases <- ltab$Freq
Case_over_month <- ltab$Freq - ftab$Freq
#Create Final table
Final_Table <- data.frame(Neighbourhood, F_weekcases, L_weekcases)
#3 Neighbourhood are different so there must be an manual correction prior to merging
neighbourhood$Neighbourhood[128] <- "Weston-Pellam Park"
neighbourhood$Neighbourhood[16] <- "Briar Hill - Belgravia"
neighbourhood$Neighbourhood[30] <- "Danforth-East York"
#Merge neighbour with final table
Final_Table <- merge(Final_Table, neighbourhood)
# Creating the case rates per 10,000
Final_Table$F_weekrate <- Final_Table$F_weekcases/Final_Table$POP * 10000
Final_Table$L_weekrate <- Final_Table$L_weekcases/Final_Table$POP * 10000
# Creating rate change
Final_Table$Rate_Change <- Final_Table$L_weekrate - Final_Table$F_weekrate
# Creating fold increase
## for relative change: Final_Table$fold_increase <- (Final_Table$L_weekrate - Final_Table$F_weekrate) /Final_Table$F_weekrate
Final_Table$fold_increase <- Final_Table$L_weekrate/Final_Table$F_weekrate
#Neighbourhood Income Data
Socioeconomic_variables <- read_csv(paste(wd,"/data/Neighbourhoods_socioeconomic_variables.csv", sep=""))
#3 Neighbourhood are different so there must be an manual correction prior to merging
Socioeconomic_variables$Neighbourhood[128] <- "Weston-Pellam Park"
Socioeconomic_variables$Neighbourhood[16] <- "Briar Hill - Belgravia"
Socioeconomic_variables$Neighbourhood[30] <- "Danforth-East York"
#Merge neighbourhood socioeconomic variables data with final table
Final_Table <- merge(Final_Table, Socioeconomic_variables)
#Merging shpfile to final table
nshp <- nshp %>%
rename(Neighbourhood = FIELD_2)
Final_Table <- left_join(nshp, Final_Table, by = "Neighbourhood")
Final_Table <- Final_Table %>%
rename(`_id` = FIELD_1,
AREA_ATTR_ID = FIELD_3,
PARENT_AREA_ID = FIELD_4,
AREA_SHORT_CODE = FIELD_5,
AREA_LONG_CODE = FIELD_6,
AREA_NAME = FIELD_7,
AREA_DESC = FIELD_8,
X = FIELD_9,
Y = FIELD_10,
LONGITUDE = FIELD_11,
LATITUDE = FIELD_12,
OBJECTID = FIELD_13,
Shape__Area = FIELD_14,
Shape__Length = FIELD_15)
ggplot(data = neighbourhoods) +
geom_sf(aes(fill = total_population)) +
scale_fill_distiller(name = "Total Population",
palette = "YlOrRd",
direction = 1) +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
#Libraries needed (maybe?)
library(isdas)
library(spatstat)
library(tidyverse)
library(ggplot2)
library(rgdal)
library(sf)
library(dplyr)
# Set working directory to the project folder on github
wd <- getwd()
#import shp file of neighbourhoods
nshp <- st_read(paste(wd, "/data/Neighbourhoods.shp", sep = ""))
st_drivers()
#visualizing shpfile
ggplot() +
geom_sf(data = nshp, size = 0.5, color = "black", fill = "#FFFFCC") +
ggtitle("Toronto Neighbourhoods") +
coord_sf()
#Deleting the neighbourhood ID from the neighbourhood field for pairing to final table
#Extracting column as matrix
f2 <- as.matrix(nshp[2])
#deleting geometry field
f2 <- subset(f2, select = -c(geometry) )
#deleting neighbourhood IDs
f2 <- gsub("[1234567890()]", " ", f2)
#deleting space after
f2 <- str_squish(f2)
#rejoining to shp file
nshp[2] <- f2
#Covid Cases
covidcases <- read_csv(paste(wd,"/data/COVID19 cases.csv", sep=""))
#Neighborhood Data
neighbourhood <- read_csv(paste(wd,"/data/Neighbourhood_POP.csv", sep=""))
chr <- as.character.Date(covidcases$`Episode Date`)
covidcases$'nd' <-chr
fweek <- c("2021-12-01","2021-12-02","2021-12-03","2021-12-04","2021-12-05","2021-12-06","2021-12-07")
lweek <- c("2021-12-25","2021-12-26","2021-12-27","2021-12-28","2021-12-29","2021-12-30","2021-12-31")
fweektb <- subset(covidcases,nd %in% fweek)
lweektb <- subset(covidcases,nd %in% lweek)
ftab <- as.data.frame(table(fweektb$`Neighbourhood Name`))
ltab <- as.data.frame(table(lweektb$`Neighbourhood Name`))
covidcases$`Episode Date`[1]
#This section in creating final_table
#Neighbourhood_Name, F_weekcases, L_weekcases, POP, F_weekrate,, L_weekrate, Rate_over_month, Case_over_month
#We need to add population for each neighbourhood and join it to the final table
Neighbourhood <- ftab$Var1
F_weekcases <- ftab$Freq
L_weekcases <- ltab$Freq
Case_over_month <- ltab$Freq - ftab$Freq
#Create Final table
Final_Table <- data.frame(Neighbourhood, F_weekcases, L_weekcases)
#3 Neighbourhood are different so there must be an manual correction prior to merging
neighbourhood$Neighbourhood[128] <- "Weston-Pellam Park"
neighbourhood$Neighbourhood[16] <- "Briar Hill - Belgravia"
neighbourhood$Neighbourhood[30] <- "Danforth-East York"
#Merge neighbour with final table
Final_Table <- merge(Final_Table, neighbourhood)
# Creating the case rates per 10,000
Final_Table$F_weekrate <- Final_Table$F_weekcases/Final_Table$POP * 10000
Final_Table$L_weekrate <- Final_Table$L_weekcases/Final_Table$POP * 10000
# Creating rate change
Final_Table$Rate_Change <- Final_Table$L_weekrate - Final_Table$F_weekrate
# Creating fold increase
## for relative change: Final_Table$fold_increase <- (Final_Table$L_weekrate - Final_Table$F_weekrate) /Final_Table$F_weekrate
Final_Table$fold_increase <- Final_Table$L_weekrate/Final_Table$F_weekrate
#Neighbourhood Income Data
Socioeconomic_variables <- read_csv(paste(wd,"/data/Neighbourhoods_socioeconomic_variables.csv", sep=""))
#3 Neighbourhood are different so there must be an manual correction prior to merging
Socioeconomic_variables$Neighbourhood[128] <- "Weston-Pellam Park"
Socioeconomic_variables$Neighbourhood[16] <- "Briar Hill - Belgravia"
Socioeconomic_variables$Neighbourhood[30] <- "Danforth-East York"
#Merge neighbourhood socioeconomic variables data with final table
Final_Table <- merge(Final_Table, Socioeconomic_variables)
#Merging shpfile to final table
nshp <- nshp %>%
rename(Neighbourhood = FIELD_2)
Final_Table <- left_join(nshp, Final_Table, by = "Neighbourhood")
Final_Table <- Final_Table %>%
rename(`_id` = FIELD_1,
AREA_ATTR_ID = FIELD_3,
PARENT_AREA_ID = FIELD_4,
AREA_SHORT_CODE = FIELD_5,
AREA_LONG_CODE = FIELD_6,
AREA_NAME = FIELD_7,
AREA_DESC = FIELD_8,
X = FIELD_9,
Y = FIELD_10,
LONGITUDE = FIELD_11,
LATITUDE = FIELD_12,
OBJECTID = FIELD_13,
Shape__Area = FIELD_14,
Shape__Length = FIELD_15)
ggplot(data = neighbourhoods) +
geom_sf(aes(fill = total_population)) +
scale_fill_distiller(name = "Total Population",
palette = "YlOrRd",
direction = 1) +
theme_minimal()
ggplot(data = neighbourhoods) +
geom_sf(aes(fill = total_population)) +
scale_fill_distiller(name = "Total Population",
palette = "YlOrRd",
direction = 1) +
theme_minimal()
ggplot(data = neighbourhood) +
geom_sf(aes(fill = total_population)) +
scale_fill_distiller(name = "Total Population",
palette = "YlOrRd",
direction = 1) +
theme_minimal()
View(neighbourhood)
View(neighbourhood)
ggplot(data = neighbourhoods) +
geom_sf(aes(fill = total_population)) +
scale_fill_distiller(name = "Total Population",
palette = "YlOrRd",
direction = 1) +
theme_minimal()
ggplot(data = Final_Table) +
geom_sf(aes(fill = fold_increase)) +
scale_fill_distiller(name = "Fold Increase",
palette = "YlOrRd",
direction = 1) +
theme_minimal()
View(Final_Table)
View(Final_Table)
ggplot(data = neighbourhood) +
geom_sf(aes(fill = POP)) +
scale_fill_distiller(name = "Total Population",
palette = "YlOrRd",
direction = 1) +
theme_minimal()
ggplot(data = Final_Table) +
geom_sf(aes(fill = POP)) +
scale_fill_distiller(name = "Total Population",
palette = "YlOrRd",
direction = 1) +
theme_minimal()
library(isdas)
library(spatstat)
library(tidyverse)
library(ggplot2)
library(rgdal)
library(sf)
library(dplyr)
# This function is used to write a bibliography for the `R` packages used in the paper
knitr::write_bib(file = 'packages.bib')
# Set working directory to the project folder on github
wd <- getwd()
#import shp file of neighbourhoods
nshp <- st_read(paste(wd, "/data/Neighbourhoods.shp", sep = ""))
#visualizing shpfile
ggplot() +
geom_sf(data = nshp, size = 0.6, color = "white", fill = "grey") +
coord_sf(datum = NA) +
theme_void()
